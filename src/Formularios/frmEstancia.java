/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Formularios;

import conection.Consultas;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.SQLException;
/**
 *
 * @author luill
 */
public class frmEstancia extends javax.swing.JDialog {

    /**
     * Creates new form frmEstancia
     */
    public frmEstancia(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        NewRegistro = new javax.swing.JButton();
        DeleteRegistro = new javax.swing.JButton();
        UpdateRegistro = new javax.swing.JButton();
        Selectregistro = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaImpresiones = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        TxtNumEstancia = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TxtNomEstancia = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TxtCantidad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        TxtNumTipoInmueble = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        NewRegistro.setText("Nuevo Registro");
        NewRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewRegistroActionPerformed(evt);
            }
        });

        DeleteRegistro.setText("Eliminar Registro");
        DeleteRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteRegistroActionPerformed(evt);
            }
        });

        UpdateRegistro.setText("Actualizar Registro");
        UpdateRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateRegistroActionPerformed(evt);
            }
        });

        Selectregistro.setText("Consultar Registros");
        Selectregistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectregistroActionPerformed(evt);
            }
        });

        TablaImpresiones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "id_Estancia", "nombre_estancia", "cantidad", "id_tipo_inmueble", "nombre inmueble"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablaImpresiones);

        jLabel1.setText("Número de Estancia");

        jLabel2.setText("Nombre de la Estancia");

        jLabel3.setText("Cantidad");

        jLabel4.setText("Número de Tipo de Inmueble");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NewRegistro)
                .addGap(27, 27, 27)
                .addComponent(DeleteRegistro)
                .addGap(18, 18, 18)
                .addComponent(UpdateRegistro)
                .addGap(66, 66, 66)
                .addComponent(Selectregistro)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TxtNumEstancia)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TxtNomEstancia)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TxtCantidad)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                    .addComponent(TxtNumTipoInmueble))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewRegistro)
                    .addComponent(DeleteRegistro)
                    .addComponent(UpdateRegistro)
                    .addComponent(Selectregistro))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtNumEstancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtNomEstancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(TxtNumTipoInmueble, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NewRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewRegistroActionPerformed

    // Obtener los valores de los campos de texto
    String idEstanciaStr = TxtNumEstancia.getText().trim();
    String nombreEstancia = TxtNomEstancia.getText().trim();
    String cantidadStr = TxtCantidad.getText().trim();
    String idTipoInmuebleStr = TxtNumTipoInmueble.getText().trim();

    // Validar que todos los campos estén llenos
    if (idEstanciaStr.isEmpty() || nombreEstancia.isEmpty() || cantidadStr.isEmpty() || idTipoInmuebleStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, llene todos los campos.", "Campos Vacíos", JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        // Convertir los valores a los tipos de datos correspondientes
        int idEstancia = Integer.parseInt(idEstanciaStr);
        int cantidad = Integer.parseInt(cantidadStr);
        int idTipoInmueble = Integer.parseInt(idTipoInmuebleStr);

        // Llamar al método insertarEstancia con los valores obtenidos
        Consultas consultas = new Consultas();
        consultas.insertarEstancia(idEstancia, nombreEstancia, cantidad, idTipoInmueble);

        // Limpiar los campos de texto después de insertar la estancia
        TxtNumEstancia.setText("");
        TxtNomEstancia.setText("");
        TxtCantidad.setText("");
        TxtNumTipoInmueble.setText("");

        JOptionPane.showMessageDialog(this, "Estancia insertada con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
    }catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Los campos ID Estancia, Cantidad e ID Tipo Inmueble deben ser números enteros.", "Error", JOptionPane.ERROR_MESSAGE);
    }
        // TODO add your handling code here:
        

  // TODO add your handling code here:
    }//GEN-LAST:event_NewRegistroActionPerformed

    private void DeleteRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteRegistroActionPerformed
        String idEstancia = TxtNumEstancia.getText().trim();
    
    // Verificar si el campo de ID no está vacío
    if (!idEstancia.isEmpty()) {
        try {
            // Convertir el idCiudad a entero
            int id = Integer.parseInt(idEstancia);
            
            // Llamar al método borrarCiudad con el ID proporcionado
            Consultas consultas = new Consultas();
            consultas.borrarOficina(id);
            
            // Limpiar el campo de ID después de borrar la ciudad
            TxtNumEstancia.setText("");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El ID de la estancia debe ser un número entero.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese el ID de la estancia que desea borrar.", "Campo Vacío", JOptionPane.WARNING_MESSAGE);
    } 
       // TODO add your handling code here:
    }//GEN-LAST:event_DeleteRegistroActionPerformed

    private void UpdateRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateRegistroActionPerformed
         String idEstanciaStr = TxtNumEstancia.getText().trim();
    String nombreEstancia = TxtNomEstancia.getText().trim();
    String cantidadStr = TxtCantidad.getText().trim();
    String idTipoInmuebleStr = TxtNumTipoInmueble.getText().trim();

    // Validar que todos los campos estén llenos
    if (idEstanciaStr.isEmpty() || nombreEstancia.isEmpty() || cantidadStr.isEmpty() || idTipoInmuebleStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, llene todos los campos.", "Campos Vacíos", JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        // Convertir los valores a los tipos de datos correspondientes
        int idEstancia = Integer.parseInt(idEstanciaStr);
        int cantidad = Integer.parseInt(cantidadStr);
        int idTipoInmueble = Integer.parseInt(idTipoInmuebleStr);

        // Llamar al método actualizarEstancia con los valores obtenidos
        Consultas consultas = new Consultas();
        consultas.actualizarEstancia(idEstancia, nombreEstancia, cantidad, idTipoInmueble);

        // Limpiar los campos de texto después de actualizar la estancia
        TxtNumEstancia.setText("");
        TxtNomEstancia.setText("");
        TxtCantidad.setText("");
        TxtNumTipoInmueble.setText("");

        JOptionPane.showMessageDialog(this, "Estancia actualizada con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Los campos ID Estancia, Cantidad e ID Tipo Inmueble deben ser números enteros.", "Error", JOptionPane.ERROR_MESSAGE);
    }// TODO add your handling code here:
    }//GEN-LAST:event_UpdateRegistroActionPerformed

    private void SelectregistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectregistroActionPerformed

     Consultas consultas = new Consultas();
    ResultSet rs = consultas.consultarEstancia();

    DefaultTableModel modelo = new DefaultTableModel();
    modelo.addColumn("ID Estancia");
    modelo.addColumn("Nombre Estancia");
    modelo.addColumn("Cantidad");
    modelo.addColumn("ID Tipo Inmueble");
    modelo.addColumn("Nombre Inmueble");

    // Verificar si se obtuvieron resultados
    if (rs != null) {
        try {
            // Limpiar el modelo antes de agregar nuevos datos
            modelo.setRowCount(0);

            // Iterar sobre los resultados del ResultSet y agregarlos al modelo
            while (rs.next()) {
                int idEstancia = rs.getInt("id_estancia");
                String nombreEstancia = rs.getString("nombre_estancia");
                int cantidad = rs.getInt("cantidad");
                int idTipoInmueble = rs.getInt("id_tipo_inmueble");
                String nombreInmueble = rs.getString("nombre_inmueble");

                modelo.addRow(new Object[]{idEstancia, nombreEstancia, cantidad, idTipoInmueble, nombreInmueble});
            }

            // Establecer el modelo en la tabla
            TablaImpresiones.setModel(modelo);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al procesar los resultados de la consulta: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "No se encontraron resultados.", "Información", JOptionPane.INFORMATION_MESSAGE);
    
}

 // TODO add your handling code here:
    }//GEN-LAST:event_SelectregistroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmEstancia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmEstancia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmEstancia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmEstancia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmEstancia dialog = new frmEstancia(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteRegistro;
    private javax.swing.JButton NewRegistro;
    private javax.swing.JButton Selectregistro;
    private javax.swing.JTable TablaImpresiones;
    private javax.swing.JTextField TxtCantidad;
    private javax.swing.JTextField TxtNomEstancia;
    private javax.swing.JTextField TxtNumEstancia;
    private javax.swing.JTextField TxtNumTipoInmueble;
    private javax.swing.JButton UpdateRegistro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
