/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Formularios;

import conection.Consultas;
import javax.swing.JComboBox;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author luill
 */
public class frmTipoInmueble extends javax.swing.JDialog {

    /**
     * Creates new form frmTipoInmueble
     */
    public frmTipoInmueble(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        NewRegistro = new javax.swing.JButton();
        Deleteregistro = new javax.swing.JButton();
        UpdateRegistro = new javax.swing.JButton();
        SelectRegistro = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        TxtNumInmueble = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        TxtPuertas = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        TxtUrban = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        TxtMedidas = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaImpresiones = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        NewRegistro.setText("Nuevo Registro");
        NewRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewRegistroActionPerformed(evt);
            }
        });

        Deleteregistro.setText("Eliminar Registro");
        Deleteregistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteregistroActionPerformed(evt);
            }
        });

        UpdateRegistro.setText("Actualizar Registro");
        UpdateRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateRegistroActionPerformed(evt);
            }
        });

        SelectRegistro.setText("Consultar Registros");
        SelectRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectRegistroActionPerformed(evt);
            }
        });

        jLabel1.setText("Número de inmueble");

        jLabel2.setText("Diafono");

        jLabel3.setText("Acondicionado");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Si", "No", " " }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Si", "No", " " }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Puertas");

        jLabel5.setText("Puerta Blindada");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Si", "No", " " }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel6.setText("Gas");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Si", "No" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jLabel7.setText("Urbanización");

        jLabel8.setText("Tamaño de Parcela");

        TablaImpresiones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id_inmueble", "Diafono", "Acondicionado", "Puertas", "Puerta Blindada", "Gas", "Urbanización", "Tamaño Parcela"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablaImpresiones);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(NewRegistro)
                                .addGap(46, 46, 46)
                                .addComponent(Deleteregistro)
                                .addGap(47, 47, 47)
                                .addComponent(UpdateRegistro)
                                .addGap(100, 100, 100)
                                .addComponent(SelectRegistro))
                            .addComponent(jLabel1))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(TxtMedidas, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(TxtUrban, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(TxtNumInmueble)
                                        .addComponent(jLabel3)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(TxtPuertas, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jLabel7))))
                            .addComponent(jLabel2)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewRegistro)
                    .addComponent(Deleteregistro)
                    .addComponent(UpdateRegistro)
                    .addComponent(SelectRegistro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(TxtNumInmueble, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtPuertas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtUrban, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addGap(29, 29, 29)
                        .addComponent(TxtMedidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void NewRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewRegistroActionPerformed
     String idTipoInmueble = TxtNumInmueble.getText().trim();
String Diafono = (String) jComboBox1.getSelectedItem();
boolean opciones = Diafono.equals("Sí");
String Acondicionado = (String) jComboBox2.getSelectedItem();
boolean opciones2 = Acondicionado.equals("Sí");
String Puertas = TxtPuertas.getText().trim();
String Blindada = (String) jComboBox3.getSelectedItem();
boolean opciones3 = Blindada.equals("Sí");
String Gas = (String) jComboBox4.getSelectedItem();
boolean opciones4 = Gas.equals("Sí");
String Urbanizacion = TxtUrban.getText().trim();
String Tamanio = TxtMedidas.getText().trim();

// Verificar si el campo de ID no está vacío
if (!idTipoInmueble.isEmpty()) {
    try {
        // Convertir el ID de tipo inmueble a entero
        int idTipoInmuebleInt = Integer.parseInt(idTipoInmueble);
        
        // Llamar al método insertarTipoInmueble con los datos proporcionados
        Consultas consultas = new Consultas();
        consultas.insertarTipoInmueble(idTipoInmuebleInt, opciones, opciones2, Puertas, opciones3, opciones4, Urbanizacion, Tamanio);

        // Limpiar los campos de texto después de insertar el tipo de inmueble
        TxtNumInmueble.setText("");
        TxtPuertas.setText("");
        TxtUrban.setText("");
        TxtMedidas.setText("");
        jComboBox1.setSelectedIndex(-1);
        jComboBox2.setSelectedIndex(-1);
        jComboBox3.setSelectedIndex(-1);
        jComboBox4.setSelectedIndex(-1);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "El ID del tipo de inmueble debe ser un número entero.", "Error", JOptionPane.ERROR_MESSAGE);
    }
} else {
    JOptionPane.showMessageDialog(this, "Por favor, ingrese el ID del tipo de inmueble.", "Campo Vacío", JOptionPane.WARNING_MESSAGE);
}
 // TODO add your handling code here:
    }//GEN-LAST:event_NewRegistroActionPerformed

    private void DeleteregistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteregistroActionPerformed
       String idTipoInmueble = TxtNumInmueble.getText().trim();
    
    // Verificar si el campo de ID no está vacío
    if (!idTipoInmueble.isEmpty()) {
        try {
            // Convertir el idCiudad a entero
            int id = Integer.parseInt(idTipoInmueble);
            
            // Llamar al método borrarCiudad con el ID proporcionado
            Consultas consultas = new Consultas();
            consultas.borrarOficina(id);
            
            // Limpiar el campo de ID después de borrar la ciudad
            TxtNumInmueble.setText("");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El ID del tipo de inmueble debe ser un número entero.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese del tipo de inmueble que desea borrar.", "Campo Vacío", JOptionPane.WARNING_MESSAGE);
    }  // TODO add your handling code here:
    }//GEN-LAST:event_DeleteregistroActionPerformed

    private void UpdateRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateRegistroActionPerformed
       String idTipoInmueble = TxtNumInmueble.getText().trim();
String Diafono = (String) jComboBox1.getSelectedItem();
System.out.println("Diafono seleccionado: " + Diafono); // Imprime el valor seleccionado
boolean opciones = Diafono != null && Diafono.equals("");
System.out.println("Valor de opciones: " + opciones); // Imprime el valor booleano resultante

String Acondicionado = (String) jComboBox2.getSelectedItem();
boolean opciones2 = Acondicionado.equals("");
String Puertas = TxtPuertas.getText().trim();
String Blindada = (String) jComboBox3.getSelectedItem();
boolean opciones3 = Blindada.equals("");
String Gas = (String) jComboBox4.getSelectedItem();
boolean opciones4 = Gas.equals("");
String Urbanizacion = TxtUrban.getText().trim();
String Tamanio = TxtMedidas.getText().trim();

// Verificar si el campo de ID no está vacío
if (!idTipoInmueble.isEmpty()) {
    try {
        // Convertir el idTipoInmueble a entero
        int id = Integer.parseInt(idTipoInmueble); 
        
        // Llamar al método actualizarTipoInmueble con los datos proporcionados
        Consultas consultas = new Consultas();
        consultas.actualizarTipoInmueble(id, opciones, opciones2, Puertas, opciones3, opciones4, Urbanizacion, Tamanio);
        
        // Limpiar los campos de texto después de actualizar el inmueble
        TxtNumInmueble.setText("");
        jComboBox1.setSelectedIndex(-1); // Limpiar la selección del JComboBox1
        jComboBox2.setSelectedIndex(-1); // Limpiar la selección del JComboBox2
        TxtPuertas.setText("");
        jComboBox3.setSelectedIndex(-1); // Limpiar la selección del JComboBox3
        jComboBox4.setSelectedIndex(-1); // Limpiar la selección del JComboBox4
        TxtUrban.setText("");
        TxtMedidas.setText("");
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "El ID del inmueble debe ser un número entero.", "Error", JOptionPane.ERROR_MESSAGE);
    }
} else {
    JOptionPane.showMessageDialog(this, "Por favor, ingrese el ID del inmueble que desea actualizar.", "Campo Vacío", JOptionPane.WARNING_MESSAGE);
} // TODO add your handling code here:
    }//GEN-LAST:event_UpdateRegistroActionPerformed

    private void SelectRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectRegistroActionPerformed
        Consultas consultas = new Consultas();
ResultSet rs = consultas.consultarTiposInmuebles(); // Llamar al método consultarTiposInmuebles

DefaultTableModel modelo = new DefaultTableModel();
modelo.addColumn("ID Tipo Inmueble"); // Agregar columna para ID Tipo Inmueble
modelo.addColumn("Diafono"); // Agregar columna para Diafono
modelo.addColumn("Acondicionado"); // Agregar columna para Acondicionado
modelo.addColumn("Puertas Entrada"); // Agregar columna para Puertas de Entrada
modelo.addColumn("Puerta Blindada"); // Agregar columna para Puerta Blindada
modelo.addColumn("Gas Ciudad"); // Agregar columna para Gas Ciudad
modelo.addColumn("Urbanizacion"); // Agregar columna para Urbanizacion
modelo.addColumn("Tamaño Parcela"); // Agregar columna para Tamaño de Parcela

// Verificar si se obtuvieron resultados
if (rs != null) {
    try {
        // Limpiar el modelo antes de agregar nuevos datos
        modelo.setRowCount(0);
        
        // Iterar sobre los resultados del ResultSet y agregarlos al modelo
        while (rs.next()) {
            int idTipoInmueble = rs.getInt("id_tipo_inmueble");
            boolean diafono = rs.getBoolean("diafono");
            boolean acondicionado = rs.getBoolean("acondicionado");
            String puertasEntrada = rs.getString("puertas_entrada");
            boolean puertaBlindada = rs.getBoolean("puerta_blindada");
            boolean gasCiudad = rs.getBoolean("gas_ciudad");
            String urbanizacion = rs.getString("urbanizacion");
            String tamañoParcela = rs.getString("tamaño_parcela");
            modelo.addRow(new Object[]{idTipoInmueble, diafono, acondicionado, puertasEntrada, puertaBlindada, gasCiudad, urbanizacion, tamañoParcela});
        }
        
        // Establecer el modelo en la tabla
        TablaImpresiones.setModel(modelo);
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error al procesar los resultados de la consulta: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
} else {
   JOptionPane.showMessageDialog(this, "No se encontraron resultados.", "Información", JOptionPane.INFORMATION_MESSAGE);
}
// TODO add your handling code here:
    }//GEN-LAST:event_SelectRegistroActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
     String[] opciones = {"Sí", "No"};
        jComboBox1 = new JComboBox<>(opciones);   // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
      String[] opciones2 = {"Sí", "No"};
        jComboBox2 = new JComboBox<>(opciones2);  // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        String[] opciones3 = {"Sí", "No"};
        jComboBox3 = new JComboBox<>(opciones3);// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
      String[] opciones4 = {"Sí", "No"};
        jComboBox4 = new JComboBox<>(opciones4);  // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmTipoInmueble.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmTipoInmueble.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmTipoInmueble.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmTipoInmueble.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmTipoInmueble dialog = new frmTipoInmueble(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Deleteregistro;
    private javax.swing.JButton NewRegistro;
    private javax.swing.JButton SelectRegistro;
    private javax.swing.JTable TablaImpresiones;
    private javax.swing.JTextField TxtMedidas;
    private javax.swing.JTextField TxtNumInmueble;
    private javax.swing.JTextField TxtPuertas;
    private javax.swing.JTextField TxtUrban;
    private javax.swing.JButton UpdateRegistro;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
